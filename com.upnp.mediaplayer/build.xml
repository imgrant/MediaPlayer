<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="publish_zip_beta" name="MediaPlayer">

    <property name="mp.home.dir" value="${basedir}"/>
    <import file="ant-common.xml"/>

    <path id="classpath_core">
        <fileset dir="${lib_dir}/core">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath_plugins">
        <fileset dir="${lib_dir}/plugins">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath_tests">
        <fileset dir="${lib_dir}/tests">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="classpath">
        <path refid="classpath_core"/>
        <path refid="classpath_plugins"/>
    </path>

    <path id="native_libs">
        <fileset dir="${lib_dir}/native">
            <include name="**/*.so"/>
            <include name="**/*.dll"/>
        </fileset>
    </path>

<!-- compile -->
    <property name="release_root_dir" value="${target_dir}"/>
    <property name="release_dir" value="${release_root_dir}/mediaplayer"/>

    <property name="release_lib_dir_name" value="mediaplayer_lib"/>
    <property name="release_lib_dir" value="${release_dir}/${release_lib_dir_name}"/>
    <property name="release_native_lib_dir" value="${release_lib_dir}/ohNet"/>
    <property name="release_plugin_lib_dir" value="${release_lib_dir}/plugins"/>

    <property name="download_dir" value="${basedir}/download"/>
    <property name="beta_download_dir" value="${download_dir}/beta"/>
    <property name="release_download_dir" value="${download_dir}/release"/>

    <path id="runtime_classpath">
        <fileset dir="${release_lib_dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="test_classpath">
        <path refid="classpath_core"/>
        <path refid="classpath_plugins"/>
        <path refid="classpath_tests"/>
        <pathelement location="${classes_dir}"/>
    </path>

    <target name="clean" description="cleans up target directory">
        <delete dir="${target_dir}"/>
    </target>

    <target name="init" description="creates needed directories for the build process">
        <mkdir dir="${classes_dir}"/>
        <mkdir dir="${release_dir}"/>
        <mkdir dir="${release_lib_dir}"/>
        <mkdir dir="${release_native_lib_dir}"/>
        <mkdir dir="${test_classes_dir}"/>
    </target>

    <target name="compile" depends="init" description="compiles all sources using the correct classpath">
        <javac srcdir="src" classpathref="classpath" destdir="${classes_dir}" debug="on" includeantruntime="false"/>
        <copy todir="${release_lib_dir}">
            <path refid="classpath_core"/>
        </copy>
        <!-- exclude name="**/org/scratchpad/*.java" /-->
    </target>

    <target name="tests_compile" depends="compile" description="compiles all test sources using the correct classpath">
        <pathconvert property="classpathProp" refid="test_classpath"/>

        <echo>Classpath is ${classpathProp}</echo>

        <javac srcdir="tests" classpathref="test_classpath" destdir="${test_classes_dir}" debug="on" includeantruntime="false"/>
    </target>

    <target name="tests" depends="tests_compile" description="runs all testcases">
        <junit haltonfailure="true">
            <classpath>
                <path refid="test_classpath"/>
                <pathelement location="${test_classes_dir}"/>
            </classpath>

            <formatter type="plain" usefile="false"/>

            <batchtest fork="yes">
                <fileset dir="tests">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="build_jar" depends="clean, compile" description="builds a jar file (mediaplayer.jar)">
        
        <copy todir="${classes_dir}/org/rpi/image">
			<fileset dir="${basedir}/src/org/rpi/image"/>
		</copy>
        
        <!-- construct classpath for Manifest -->
        <manifestclasspath property="manifest_cp" jarfile="${release_dir}/mediaplayer.jar">
            <classpath refid="runtime_classpath" />
        </manifestclasspath>

        <!-- package the whole application (without plugins) into its own jar file -->
        <jar destfile="${release_dir}/mediaplayer.jar" update="false">
            <manifest>
                <attribute name="Main-Class" value="org.rpi.main.StartMe" />
                <attribute name="Class-Path" value="${manifest_cp}" />
            </manifest>
            <fileset dir="${classes_dir}">
                <exclude name="**/plugin/**" />
            </fileset>
        </jar>
    </target>

    <target name="build_app" depends="build_jar, build_plugins" description="assembles the application in the release directory">
    <!-- copy core Java libs - already done by compile
        <copy todir="${release_lib_dir}">
            <path refid="classpath_core"/>
        </copy>
    -->

        <!-- copy native ohNet libs to release -->
        <copy todir="${release_native_lib_dir}">
            <path refid="native_libs"/>
        </copy>

        <!-- copy Java libs for plugins -->
        <copy todir="${release_plugin_lib_dir}">
            <path refid="classpath_plugins"/>
        </copy>

        <!-- copy additional files to application -->
        <copy file="${basedir}/license.txt" todir="${release_dir}" />
    	
    	<!-- copy web files to the application -->
    	<copy todir="${release_dir}/web">
    	            <fileset dir="${basedir}/web"/>
    	</copy>

        <copy todir="${release_dir}">
            <fileset dir="${lib_dir}/application"/>
        </copy>

        <copy todir="${release_dir}/plugins.rename_to_enable">
            <fileset dir="${plugins_dir}"/>
        </copy>

        <zip destfile="${target_dir}/mediaplayer.zip" basedir="${release_dir}">
        </zip>
    </target>

    <target name="publish_zip_beta" depends="build_app" description="copy the zip of build_app and put it into the download beta directory">
        <delete dir="${beta_download_dir}"/>
        <mkdir dir="${beta_download_dir}"/>
        <copy file="${target_dir}/mediaplayer.zip" todir="${beta_download_dir}"/>
    </target>

    <target name="publish_zip_release" depends="build_app" description="copy the zip of build_app and put it into the download release directory">
        <delete dir="${release_download_dir}"/>
        <mkdir dir="${release_download_dir}"/>
        <copy file="${target_dir}/mediaplayer.zip" todir="${release_download_dir}"/>
    </target>

    <target name="run" depends="build_app" description="runs the app from the current directory">
        <java jar="${release_dir}/mediaplayer.jar" fork="true"/>
    </target>

    <target name="run_debug" depends="build_app" description="runs the app from the current directory in debug mode">
        <java jar="${release_dir}/mediaplayer.jar" fork="true">
            <jvmarg value="-Xnoagent"/>
            <jvmarg value="-Djava.compiler=NONE"/>
            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005"/>
        </java>
    </target>

    <target name="build_plugins" description="builds the plugins">
        <subant target="build_plugin">
            <fileset dir="BuildScript" includes="build-plugin-*.xml"/>
        </subant>
    </target>

</project>
